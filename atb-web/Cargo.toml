[package]
name = "atb-web"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
axum = { version = "0.7", optional = true, features=["http2", "macros", "multipart", "ws"] }
console_error_panic_hook = "0.1"
console_log = "1"
cfg-if = "1"
leptos = { version = "0.6", features = ["nightly"] }
leptos_axum = { version = "0.6", optional = true }
leptos_meta = { version = "0.6", features = ["nightly"] }
leptos_router = { version = "0.6", features = ["nightly"] }
log = "0.4"
simple_logger = "5"
tower = { version = "0.4", optional = true }
tower-http = { version = "0.5", features = ["fs"], optional = true }
thiserror = "1"
tracing = { version = "0.1", optional = true }
http = "1"
craftping = { version = "0.5", default-features=false, features = [
"async-tokio",
"sync",
] }
tokio = { version = "1", features = ["macros", "rt-multi-thread", "tracing"], optional = true }
serde = {version = "1", features = ["derive"]}
serde_json = "1.0"
gloo = "0.11"
wasm-bindgen = "0.2"
#minecraft-msa-auth = "0.3"
#oauth2 = {version = "4.4", default-features=false, features = ["rustls-tls"]}
atb_types = { path = "../atb_types"}
reqwest = {version = "0.12", default-features=false, features = ["json", "rustls-tls"]}
sqlx = { version = "0.7", features = [ "runtime-tokio", "tls-rustls" , "postgres", "macros", "time", "uuid", "any"], optional = true }
uuid = "*"
axum_session = { version = "0.14", optional = true }
axum_session_auth = { version = "0.14", optional = true }
leptos-use = "0.10"
#webauthn-rs = { version = "0.4.8", optional = true }
#webauthn-rs-proto = { features = ["wasm"] }
anyhow = "1"
plotly = { version = "0.9.0", features = ["wasm"] }

[dependencies.web-sys]
version = "0.3"
features = [
"Navigator",
"CredentialsContainer",
]

[features]
default = ["ssr"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
    "dep:axum",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "dep:tracing",
    "dep:sqlx",
    "dep:axum_session",
    "dep:axum_session_auth",
  #    "dep:webauthn-rs",
    "leptos-use/ssr",
    "atb_types/ssr",
]

# Defined in workspace Cargo.toml
# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[profile.release]
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
#output-name = ""

#[package.metadata.cargo-all-features]
#denylist = ["axum", "tower", "tower-http", "tokio", "sqlx", "leptos_axum"]
#skip_feature_sets = [["ssr", "hydrate"]]

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
tailwind-input-file = "style/tailwind.css"
tailwind-config-file = "tailwind.config.js"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
